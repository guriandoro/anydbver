- name: Start PMM
  when: pmm_server_version != ""
  shell:
    cmd: >-
      {{docker_cmd}} create -v /srv --name pmm-data {{ pmm_server_image }} /bin/true ;
      {{docker_cmd}} run -d -p 80:80 -p 443:443 
      --volumes-from pmm-data 
      --name pmm-server {{ '-e SERVER_USER=admin -e SERVER_PASSWORD=' + db_password if pmm_server_version.startswith('1.') else '' }} 
      {{ pmm_server_image }} ;
      {{docker_cmd}} ps | grep pmm-server && touch /root/pmm-server-created
    creates: /root/pmm-server-created

- name: Set PMM2 password
  when: ( pmm_server_version.startswith('2.') or (pmm_server_version is regex(':2')) ) and db_password != ''
  command:
    cmd: "{{docker_cmd}} exec -t pmm-server bash -c 'sleep 30;grafana-cli --homepath /usr/share/grafana --configOverrides cfg:default.paths.data=/srv/grafana admin reset-admin-password {{db_password}}'"
    #cmd: "{{docker_cmd}} exec -t pmm-server bash -c  'ln -s /srv/grafana /usr/share/grafana/data; if [[ $(realpath /usr/share/grafana/data/grafana.db) != '/srv/grafana/grafana.db' ]] ; then mv /usr/share/grafana/data /usr/share/grafana/data1; ln -s /srv/grafana /usr/share/grafana/data ; mv /usr/share/grafana/data1/log /usr/share/grafana/data/ ; fi; sleep 30; grafana-cli --homepath /usr/share/grafana admin reset-admin-password {{db_password}}'"

